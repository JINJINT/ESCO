% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/esco-simulate.R
\name{escoSimulate}
\alias{escoSimulate}
\alias{escoSimulateSingle}
\alias{escoSimulateGroups}
\alias{escoSimulateTrees}
\title{ESCO simulation}
\usage{
escoSimulate(params = newescoParams(), type = c("single", "groups",
  "tree", "path"), verbose = TRUE, ...)

escoSimulateSingle(params = newescoParams(), verbose = TRUE, ...)

escoSimulateGroups(params = newescoParams(), verbose = TRUE, ...)

escoSimulateTrees(params = newescoParams(), verbose = TRUE, ...)
}
\arguments{
\item{type}{which type of heterogenounity to use. Options are :
"single" which produces a single population;
"groups" which produces distinct groups (eg. cell types);
"trees"  which produces distinct groups but admits a tree structure.}

\item{verbose}{logical. Whether to print progress messages.}

\item{...}{any additional parameter settings to override what is provided in
\code{params}.}
}
\value{
SingleCellExperiment object containing the simulated counts and
intermediate values.
}
\description{
Simulate count data from a fictional single-cell RNA-seq experiment using
the ESCO method.
}
\details{
Parameters can be set in a variety of ways. If no parameters are provided
the default parameters are used. Any parameters in \code{params} can be
overridden by supplying additional arguments through a call to
\code{\link{setParams}}. This design allows the user flexibility in
how they supply parameters and allows small adjustments without creating a
new \code{escoParams} object. See examples for a demonstration of how this
can be used.

The simulation involves the following steps:
\enumerate{
    \item Set up simulation object
    \item Simulate library sizes
    \item Simulate base gene means
    \item Simulate groups / tree structure differential factors
    \item Simulate mean variance relationship adjusted cell means
    \item Simulate true counts with/without correlation
    \item Simulate techinical droputs (zeroinflation / downsampling)
    \item Create final dataset
}

The final output is a
\code{\link[SingleCellExperiment]{SingleCellExperiment}} object that
contains the simulated counts but also the values for various intermediate
steps, and the paramters used to generate the simulation.
These are stored in the \code{\link{colData}} (for cell specific
information), \code{\link{rowData}} (for gene specific information),
\code{\link{assays}} (for gene by cell matrices), 
or \code{\link{metadata}} (for parameters configurations) slots. 

This additional information includes:
\describe{
    \item{\code{phenoData}}{
        \describe{
            \item{Cell}{Unique cell identifier.}
            \item{Group}{The group or path the cell belongs to.}
            \item{ExpLibSize}{The expected library size for that cell.}
            \item{}{}
        }
    }
    \item{\code{featureData}}{
        \describe{
            \item{Gene}{Unique gene identifier.}
            \item{DEgenes[Group]}{Values of 1 indicate the gene is differentially expressed.}
            \item{GeneGroup}{The group that the gene belongs to (markers or housekeeping genes or None).}
            \item{BaseGeneMean}{The base expression level for that gene.}
            \item{OutlierFactor}{Expression outlier factor for that gene.
            Values of 1 indicate the gene is not an expression outlier.}
            \item{GeneMean}{Expression level after applying outlier factors.}
            \item{BatchFac[Batch]}{The batch effects factor for each gene for
            a particular batch.}
            \item{DEFac[Group]}{The differential expression factor for each
            gene in a particular group. Values of 1 indicate the gene is not
            differentially expressed.}
            \item{SigmaFac[Path]}{Factor applied to genes that have
            non-linear changes in expression along a path.}
        }
    }
    \item{\code{assayData}}{
        \describe{
            \item{Means}{The mean expression of genes in each cell
            after adding batch effects.}
            \item{BaseCellMeans}{The mean expression of genes in each cell
            after any differential expression and adjusted for expected
            library size.}
            \item{BCV}{The Biological Coefficient of Variation for each gene
            in each cell.}
            \item{CellMeans}{The mean expression level of genes in each cell
            adjusted for BCV.}
            \item{TrueCounts}{The simulated true counts.}
            \item{counts}{The simulated counts with technical noise.}
            \item{Dropout}{Logical matrix showing which values have been
            dropped in which cells.}
        }
    }
}

Values that have been added by escoter are named using \code{UpperCamelCase}
in order to differentiate them from the values added by analysis packages
which typically use \code{underscore_naming}.
}
\examples{
# Simulation with default parameters
sim <- escoSimulate()
\dontrun{
# Simulation with different number of genes
sim <- escoSimulate(nGenes = 1000)
# Simulation with custom parameters
params <- newescoParams(nGenes = 100, mean.rate = 0.5)
sim <- escoSimulate(params)
# Simulation with adjusted custom parameters
sim <- escoSimulate(params, mean.rate = 0.6, out.prob = 0.2)
# Simulate groups
sim <- escoSimulate(type = "groups")
# Simulate paths
sim <- escoSimulate(type = "tree")
}
}
\references{
Zappia L, Phipson B, Oshlack A. escoter: simulation of single-cell RNA
sequencing data. Genome Biology (2017).

Paper: \url{10.1186/s13059-017-1305-0}

Code: \url{https://github.com/Oshlack/escoter}
}
\seealso{
\code{\link{escoSimLibSizes}}, 
\code{\link{escoSimGeneMeans}},
\code{\link{escoSimMeans}},
\code{\link{escoSimDE}}, 
\code{\link{escoSimCellMeans}}, 
\code{\link{escoSimTrueCounts}},
\code{\link{escoSimDropout}}
}
