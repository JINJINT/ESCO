% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/esco-simulate.R
\name{escoSimulate}
\alias{escoSimulate}
\alias{escoSimulateSingle}
\alias{escoSimulateGroups}
\alias{escoSimulateTree}
\alias{escoSimulateTraj}
\title{ESCO simulation}
\usage{
escoSimulate(params = newescoParams(), type = c("single", "group",
  "tree", "traj"), verbose = TRUE, numCores = 2, ...)

escoSimulateSingle(params = newescoParams(), verbose = TRUE, ...)

escoSimulateGroups(params = newescoParams(), verbose = TRUE, ...)

escoSimulateTree(params = newescoParams(), verbose = TRUE, ...)

escoSimulateTraj(params = newescoParams(), verbose = TRUE, ...)
}
\arguments{
\item{type}{which type of heterogenounity to use. Options are :
"single" which produces a single population;
"group" which produces distinct groups;
"tree"  which produces distinct groups but admits a tree structure;
"traj"  which produces distinct groups but admits a smooth trajectory structure.}

\item{verbose}{logical. Whether to print progress messages.}

\item{...}{any additional parameter settings to override what is provided in
\code{\link{params}}.}
}
\value{
SingleCellExperiment object containing the simulated counts and
intermediate values.
}
\description{
Simulate count data from a fictional single-cell RNA-seq experiment using
the hierarchical copula model.
}
\details{
Parameters can be set in a variety of ways. If no parameters are provided
the default parameters are used. We adopts the way in splatter to set up parameters, particularly, 
any parameters in \code{\link{params}} can be
overridden by supplying additional arguments through a call to
\code{\link{setParams}}. This design allows the user flexibility in
how they supply parameters and allows small adjustments without creating a
new \code{escoParams} object. See examples for a demonstration of how this
can be used.

The simulation involves the following steps:
\enumerate{
    \item Set up simulation object
    \item Simulate library sizes
    \item Simulate base gene means
    \item Simulate groups / tree / path structure differential factors
    \item Simulate mean variance relationship adjusted cell means
    \item Simulate true counts with / without correlation
    \item Simulate techinical noise (zeroinflation / downsampling)
    \item Create final dataset
}

The final output is a
\code{\link[SingleCellExperiment]{SingleCellExperiment}} object that
contains the simulated counts but also the values for various intermediate
steps, and the paramters used to generate the simulation.
These are stored in the \code{\link{colData}} (for cell specific
information), \code{\link{rowData}} (for gene specific information),
\code{\link{assays}} (for gene by cell matrices), 
or \code{\link{metadata}} (for parameters configurations) slots.
}
\examples{
# Simulation with default parameters
sim <- escoSimulate()
\dontrun{
# Simulation with different number of genes
sim <- escoSimulate(nGenes = 1000)
# Simulation with custom parameters
params <- newescoParams(nGenes = 100, mean.rate = 0.5)
sim <- escoSimulate(params)
# Simulation with adjusted custom parameters
sim <- escoSimulate(params, mean.rate = 0.6, out.prob = 0.2)
# Simulate group
sim <- escoSimulate(type = "group")
# Simulate tree
sim <- escoSimulate(type = "tree")
# Simulate traj
sim <- escoSimulate(type = "traj")
}
}
\references{
Tian J, Wang J, Roeder K. ESCO: single cell expression simulation incorporating gene co-expression. 
bioRxiv. 2020.

Paper: \url{https://www.biorxiv.org/content/10.1101/2020.10.20.347211v1}

Code: \url{https://github.com/JINJINT/}
}
\seealso{
\code{\link{escoSimLibSizes}}, 
\code{\link{escoSimGeneMeans}},
\code{\link{escoSimMeans}},
\code{\link{escoSimDE}}, 
\code{\link{escoSimCellMeans}}, 
\code{\link{escoSimTrueCounts}},
\code{\link{escoSimDropout}}
}
